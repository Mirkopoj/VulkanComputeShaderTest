#version 430
layout(local_size_x = 1, local_size_y = 1) in;

layout(std430, binding = 0) buffer lay0 { int inbuf[]; };
layout(std430, binding = 1) buffer lay1 { int outbuf[]; };

#define ancho 8192

int thres(int valor){
	return (valor > 0x7F)? 0xFF:0;
}

int edge_v(const uint r, const uint c){
	return //thres(
		inbuf[r-1*ancho+c-1]+
		inbuf[r  *ancho+c-1]+
		inbuf[r+1*ancho+c-1]-
		inbuf[r-1*ancho+c+1]-
		inbuf[r  *ancho+c+1]-
		inbuf[r+1*ancho+c+1]
	//) 
	;
}

int edge_h(const uint r, const uint c){
	return thres(
		inbuf[r-1*ancho+c-1]+
		inbuf[r-1*ancho+c  ]+
		inbuf[r-1*ancho+c+1]-
		inbuf[r+1*ancho+c-1]-
		inbuf[r+1*ancho+c  ]-
		inbuf[r+1*ancho+c+1]
	);
}

void main() {
	// drop threads outside the buffer dimensions.
	/* if(params.Width <= gl_GlobalInvocationID.x || params.Height <= gl_GlobalInvocationID.y){ */
	/* 	return; */
	/* } */
	const uint id = gl_GlobalInvocationID.x; // current offset
	const uint row = id%ancho;
	const uint col = id/ancho;

	outbuf[id] = edge_v(row, col);// | edge_h(row, col);
} 
